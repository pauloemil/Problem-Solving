<math.h>
for absolute value, power, round/ceil/floor, log
abs(), pow(), log10(), round(), ceil(), floor()

<bitset>
to convert numbers to binary and back, and other operations
bitset<numberOfBits> varName (value); //where value can be 64, 0xFA2, "01101"
int decimalValue = varName.to_ulong();

<algorithm>
searching and sorting
sort(), binary_search(), reverse()
and accumulate() for summing values
syntax for normal static arrays:
sort(myArray, myArray+length);
syntax for dynamic lists such as vector:
sort(v.begin(), v.end());
//with macro #define all(v) v.begin(), v.end() it can be
sort(all(v));

macros:
#define fr first
#define sc second
pair<int, name> ageName;
age.fr = 11; --> //age.first = 11;
age.sc = "Hanafi"; //age.second = "Hanafi";

useful macro with vectors:
#define all(v) v.begin(), v.end()
vector<int> vectorBate5a = {...};
sort(all(vectorBate5a)); //compiled as --> sort(vectorBate5a.begin(), vectorBate5a.end());

auto varname = true; // auto make it like python ;)

<limits>
std::cout << "Min double " << 
            std::numeric_limits<double>::min() << "\n";
    std::cout << "Max double " << 
            std::numeric_limits<double>::max() << "\n";
            
to know the bytes of var type 
sizeof(int)

controlling floats and doubles:
  printf("something: %.10f\n", floatVarName)
C printing:
  printf("%c %d %5d %.3f %s\n", 'A', 10, 5, 3.1234, "Hi");
